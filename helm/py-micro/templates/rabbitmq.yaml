apiVersion: v1
kind: PersistentVolume
metadata:
  name: rabbitmq-pv
spec:
  capacity:
    storage: {{ .Values.storage.rabbitmq.size }}
  volumeMode: Filesystem
  storageClassName: {{ .Values.storage.className }}
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: {{ .Values.storage.rabbitmq.path }}
    type: DirectoryOrCreate

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-pvc
  namespace: {{ .Values.namespace }}
spec:
  volumeName: rabbitmq-pv
  storageClassName: {{ .Values.storage.className }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.storage.rabbitmq.size }}

---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  selector:
    app: rabbitmq
  ports:
   - name: http
     protocol: TCP
     port: {{ .Values.rabbitmq.httpPort }}
     targetPort: {{ .Values.rabbitmq.httpPort }}
   - name: amqp
     protocol: TCP
     port: {{ .Values.rabbitmq.amqpPort }}
     targetPort: {{ .Values.rabbitmq.amqpPort }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-deployment
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.rabbitmq.replicas }}
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: {{ .Values.rabbitmq.image }}
          ports:
            - containerPort: {{ .Values.rabbitmq.httpPort }}
              name: http
            - containerPort: {{ .Values.rabbitmq.amqpPort }}
              name: amqp
          volumeMounts:
            - name: rabbitmq-storage
              mountPath: /var/lib/rabbitmq
          resources:
            {{- toYaml .Values.rabbitmq.resources | nindent 12 }}
      volumes:
        - name: rabbitmq-storage
          persistentVolumeClaim:
            claimName: rabbitmq-pvc
